% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nice_plots.R
\name{nice_plots}
\alias{nice_plots}
\title{Funciton to plot nice plots}
\usage{
nice_plots(x_vec, y_matrix, fdr = TRUE, power = TRUE,
  low_eff_plot = FALSE, null = NULL, cv = NULL, ey = NULL, cor = NULL,
  figure = c("ranksProb", "nullPropVsPower", "effectVsFPFP", "CV"))
}
\arguments{
\item{x_vec}{a vector of values corresponds to x-axis}

\item{y_matrix}{a matrix of values correspond to y-axix for multiple plots}

\item{fdr}{determine whether FDR or FWER will be used, default is FDR}

\item{power}{determine whether power will be plotted, default is TRUE}

\item{low_eff_plot}{deteremine whether power of the low effect sizes will be plotted, default is FALSE}

\item{null}{the proportion of the true null if power or FDR/FWER is plotted against the effect sizes}

\item{cv}{the value of the coefficient of variation if power is plotted against effect sizes}

\item{ey}{the value of the effect size if power is plotted against the proportion of the true null}

\item{cor}{the value of the correlation if the figure is for the ranks probability}

\item{figure}{types of figure will be plotted c("ranksProb", "nullPropVsPower", "effectVsFPFP", "CV")}
}
\value{
\code{Data}
A plot of multiple curves
}
\description{
\code{OPWpaper} has stored .RDATA from the simulation. This
function will use those simulated data to plots
}
\details{
\code{OPWeight} package proposed methods to compute the probabilities
of the rank of test given the effect size to obtian the optimal power.
This function is desigend to plot the power curves under different scenerio.
Note that, we alreday simulated power and FDR/FWER for the different scenerios
and stored in the packages *OPWpaper* as .RDATA. This function will only
be able to use those data sets or data with the similar formats.
}
\examples{
# only just examples from the previously stored .RDATA
# plot of power against the effect sizes
# p_.5_eq_power <- nice_plots(x_vec = ey_vec, y_matrix = FwerPowerFdrPower2e1,
#                                null = 50, figure = "effectVsFPFP")
# p_.9_eq_power <- nice_plots(x_vec = ey_vec, y_matrix = FwerPowerFdrPower4e1,
#                                null = 90, figure = "effectVsFPFP")
# p_.99_eq_power<- nice_plots(x_vec = ey_vec, y_matrix = FwerPowerFdrPower5e1,
#                                null = 99, figure = "effectVsFPFP")

# p_.5_low_ef_eq_power <- nice_plots(x_vec = ey_vec, y_matrix = FwerPowerFdrPower2e1,
#                       null = 50, low_eff_plot = TRUE, figure = "effectVsFPFP")
# p_.9_low_ef_eq_power <- nice_plots(x_vec = ey_vec, y_matrix = FwerPowerFdrPower4e1,
#                       null = 90, low_eff_plot = TRUE, figure = "effectVsFPFP")
# p_.99_low_ef_eq_power<- nice_plots(x_vec = ey_vec, y_matrix = FwerPowerFdrPower5e1,
#                       null = 99, low_eff_plot = TRUE, figure = "effectVsFPFP")

# p_eq_power = plot_grid(p_.5_eq_power, p_.9_eq_power, p_.99_eq_power,
#                    p_.5_low_ef_eq_power, p_.9_low_ef_eq_power, p_.99_low_ef_eq_power,
#                    ncol = 3, labels = letters[1:3], align = 'hv')
# title <- ggdraw() + draw_label("Power: et = ey")
# plot_grid(title, p_eq_power, legend, ncol = 1, rel_heights=c(.1, 1, .1))

# plot of power against the true propotion of the null
# mat_ef.6 <- rbind(FwerPowerFdrPower1f1[13:16, 4], FwerPowerFdrPower2f1[13:16, 4],
# FwerPowerFdrPower3f1[13:16, 4], FwerPowerFdrPower4f1[13:16, 4],
# FwerPowerFdrPower5f1[13:16, 4])
# p_ef.6 <- nice_plots(x_vec = nullProp, y_matrix = mat_ef.6, fdr = TRUE,
# power = TRUE, ey = 0.6, figure = "nullPropVsPower")

}
\references{
Hasan and Schliekelman (2017)
}
\author{
Mohamad S. Hasan, \email{mshasan@uga.edu}
}
