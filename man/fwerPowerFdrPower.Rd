% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fwerPowerFdrPower.R
\name{fwerPowerFdrPower}
\alias{fwerPowerFdrPower}
\title{Simulate FWER, POWER, FDR, and POWER}
\usage{
fwerPowerFdrPower(i, simu, null, corr = 0, cv = 0, alpha = 0.05,
  groupSize = 100, effectType = c("continuous", "binary"),
  covariateEffectVec, datWeightByNull)
}
\arguments{
\item{i}{Integer, i-th effect size of a vector of effects}

\item{simu}{Integer, number of replications}

\item{null}{Numeric, proportion of the true null hypothesis}

\item{corr}{Numeric, correlation between the test statistics}

\item{cv}{Numeric, coefficient of variation of the test statistics}

\item{alpha}{Numeric value of the significance threshold}

\item{groupSize}{Integer, number of test statistics per group}

\item{effectType}{Character ("continuous" or "binary"), type of effect sizes}

\item{covariateEffectVec}{A numeric vector of different covariate-effect size}

\item{datWeightByNull}{A numeric matrix of weights, each column corresponds
to an covariate-effect size}
}
\value{
A matrix of 16 rows containing information about FWER, POWER, FDR,
and POWER (4 rows for each item)
}
\description{
This function simulate the Family Wise Error Rate (FWER) and the
corresponding Power, and the False Discovery Rate (FDR) and the corresponding
Power for the different effect sizes
}
\details{
This function simulate Family Wise Error Rate (FWER) and corresponding
Power, and False Discovery Rate (FDR) and the corresponding Power for the
different effect sizes
}
\examples{
# vector of covariate-effect sizes
covariateEffectVec <- c(1, 1.5, 2)

# compute probability matrix
ranksProb_byEffect <- sapply(1:length(covariateEffectVec), ranksProb_byEffect,
             null = .9, m = 100, covariateEffectVec = covariateEffectVec)

# compute weights
weightByEffect <- sapply(1:length(covariateEffectVec), weight_byEffect_cont,
                   alpha = .05, null = .9, m = 100, delInterval = .01,
                   covariateEffectVec = covariateEffectVec,
                   datByNull = ranksProb_byEffect)

simuVal = 3  # in the actual case use at least simVal = 1000
result <- sapply(1:length(covariateEffectVec), fwerPowerFdrPower, simu = simuVal,
             null = .5, corr = 0, cv = 0, alpha = .05, groupSize = 100,
             effectType = "continuous", covariateEffectVec = covariateEffectVec,
             datWeightByNull = weightByEffect)

}
\references{
Hasan and Schliekelman (2017)
}
\seealso{
\code{\link{weight_byEffect_cont}}
\code{\link{ranksProb_byEffect}}
}
\author{
Mohamad S. Hasan, \email{shakilmohamad7@gmail.com}
}
