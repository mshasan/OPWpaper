% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fwerPowerFdrPower.R
\name{fwerPowerFdrPower}
\alias{fwerPowerFdrPower}
\title{Simulate FWER, POWER, FDR, and POWER}
\usage{
fwerPowerFdrPower(i, simu, null, corr = 0, cv = 0, alpha = 0.05,
  groupSize = 100, effectType = c("continuous", "binary"), filterEffectVec,
  datWeightByNull)
}
\arguments{
\item{i}{i-th filter effect}

\item{simu}{number of replications}

\item{null}{proportion of the true null hypothesis}

\item{corr}{correlation between test statistics}

\item{cv}{determine whether the test mean effect and the filter mean effects are the same}

\item{alpha}{significance threshold}

\item{groupSize}{number of test statistics per group}

\item{effectType}{type of effect sizes, c("continuous", "binary")}

\item{filterEffectVec}{a vector of different effect size}

\item{datWeightByNull}{a matrix of weights, each column corresponds to a effect size}
}
\value{
a matrix of 16 rows containing information about FWER, POWER, FDR, and
POWER (4 rows for each)
}
\description{
This function simulate Family Wise Error Rate (FWER) and corresponding
Power, and False Discovery Rate (FDR) and the corresponding Power for different
effect sizes
}
\details{
This function simulate Family Wise Error Rate (FWER) and corresponding
Power, and False Discovery Rate (FDR) and the corresponding Power for different
effect sizes
}
\examples{
# vector of effect sizes
filterEffectVec <- c(1, 1.5, 2)

# compute probability matrix
ranksProb_byEffect <- sapply(1:length(filterEffectVec), ranksProb_byEffect,
             null = .9, m = 100, filterEffectVec = filterEffectVec)

# compute weights
weightByEffect <- sapply(1:length(filterEffectVec), weight_byEffect_cont,
                   alpha = .05, null = .9, m = 100, delInterval = .0001,
                   filterEffectVec = filterEffectVec,
                   datByNull = ranksProb_byEffect)

simuVal = 3  # in actual case use at least simVal = 1000
result <- sapply(1:length(filterEffectVec), fwerPowerFdrPower, simu = simuVal,
             null = .5, corr = 0, cv = 0, alpha = .05, groupSize = 100,
             effectType = "continuous", filterEffectVec = filterEffectVec,
             datWeightByNull = weightByEffect)

}
\references{
Hasan and Schliekelman (2017)
}
\seealso{
\code{\link{weight_byEffect_cont}}
\code{\link{ranksProb_byEffect}}
}
\author{
Mohamad S. Hasan, \email{mshasan@uga.edu}
}
