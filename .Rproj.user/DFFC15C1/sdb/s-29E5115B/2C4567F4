{
    "collab_server" : "",
    "contents" : "getwd()\nsetwd(\"U:/Documents/My Research (UGA)/Multiple Hypoetheses/Article-3\")\n\nlibrary(devtools)\n#install_github(\"mshasan/OPWeight\", force = TRUE)\nlibrary(OPWeight)\nlibrary(OPWpaper)\nlibrary(readr)\nlibrary(tibble)\nlibrary(MASS)\nlibrary(qvalue)\nlibrary(IHW)\nlibrary(pacman)\n\nTG_ONE_Eur_tbl <- read_delim(\"U:/Documents/My Research (UGA)/Multiple Hypoetheses/Article-3/data/TG_ONE_Eur.tbl.sorted\",\n                                  \"\\t\", escape_double = FALSE, trim_ws = TRUE)\nhead(TG_ONE_Eur_tbl)\nnames(TG_ONE_Eur_tbl)\ndim(TG_ONE_Eur_tbl)\n#View(TG_ONE_Eur_tbl)\nTG_ONE_Eur_tbl <- unique.data.frame(TG_ONE_Eur_tbl)\n\npgc_scz_full_2012_04 <- read.table(\"U:/Documents/My Research (UGA)/Multiple Hypoetheses/Article-3/data/pgc.scz.full.2012-04.txt\", h=TRUE)\nhead(pgc_scz_full_2012_04)\nnames(pgc_scz_full_2012_04)\n#View(pgc_scz_full_2012_04)\ndim(pgc_scz_full_2012_04)\npgc_scz_full_2012_04 <- unique.data.frame(pgc_scz_full_2012_04)\n\n\n\ncommonSnp <- intersect(TG_ONE_Eur_tbl$MarkerName, pgc_scz_full_2012_04$snpid)\nlength(commonSnp)\n\nfilter_pvals <- TG_ONE_Eur_tbl$GC.Pvalue[pmatch(commonSnp, TG_ONE_Eur_tbl$MarkerName)]\npval <- pgc_scz_full_2012_04$pval[pmatch(commonSnp, pgc_scz_full_2012_04$snpid)]\n\nfilter <- qnorm(filter_pvals/2, lower.tail = FALSE)\ntest <- qnorm(pval/2, lower.tail = FALSE)\n\nfilter <- filter+.0001\n\n\n\n\n\nresult_bh <- opw(pvalue = pval, filter = filter, ranks = TRUE, tail = 1,\n              effectType = \"continuous\", method = \"BH\", monitor = TRUE)\n\nresult_bon <- opw(pvalue = pval, filter = filter, prob_givenEffect = result_bh$probGivenEffect,\n                      ranks = TRUE, tail = 1, effectType = \"continuous\", method = \"BON\", monitor = TRUE)\n\nresult_bh$rejections\nresult_bon$rejections\n\n# > result_bh$rejections\n# [1] 1372\n\n# > result_bon$totalTests\n# [1] 1162376\n# > result_bon$propNulls\n# [1] 0.9004788\n\nplot(result_bon$probGivenEffect)\nplot(result_bon$weight)\n\n# > result_bon$rejections\n# [1] 222\nsigSNP <- result_bon$rejections_list\nView(sigSNP)\n\n\nsigResults <- pgc_scz_full_2012_04[pmatch(sigSNP$pvalue, pgc_scz_full_2012_04$pval), ]\nView(sigResults)\nwrite.csv(sigResults, file=\"sigResults_lipid_scz.csv\")\n\n\n\n\n\n\n\n\n\n\n\n\nsummary(filter)\n\nData <- tibble(test, pval, filter)\t# data of filter covariate and pvlaues\n\n# fite box-cox regression\n#--------------------------------\nbc <- boxcox(filter+.0001 ~ test)\nlambda <- bc$x[which.max(bc$y)]\nmodel <- lm(filter**lambda ~ test)\nsummary(model)\n\n\n\n# fit regression to obtain filter and test effect sizes\n#-------------------------------------------------------------\nnrep = 10000\nm = length(pval)\nnull = qvalue(pval, pi0.method=\"bootstrap\")$pi0\nm0 = ceiling(null*m)\nm1 = m-m0\n\n\ntest_effect = if(m1 == 0) {0\n} else {sort(test, decreasing = T)[1:m1]}\t\t# two-tailed test\n\net_cont = mean(test_effect, na.rm = T)\ney_cont = model$coef[[1]] + model$coef[[2]]*et_cont\net_bin = median(test_effect, na.rm = T)\ney_bin = model$coef[[1]] + model$coef[[2]]*et_bin\n\nprob_bin <-vapply(1:m, prob_rank_givenEffect, 1, et = ey_bin,\n                  ey = ey_bin, nrep = nrep, m0 = m0, m1 = m1)\nprob_cont <-vapply(1:m, prob_rank_givenEffect, 1, et = ey_cont,\n                   ey = ey_cont, nrep = nrep, m0 = m0, m1 = m1)\n\nalphaVec = seq(.05,.1,length.out = 5)\n\nw_bin <- sapply(alphaVec, weight_binary, et = et_bin, m = m, m1 = m1, tail = 1,\n                delInterval = .0001, prob = prob_bin)\nw_cont = sapply(alphaVec, weight_continuous, et = et_cont, m = m, tail = 1,\n                delInterval=.0001 , prob = prob_cont)\n\n\nfun.rejections <- function(i,alphaVec,Data,W_bin_mat,W_cont_mat)\n{\n    alpha=alphaVec[i]\n    W_bin=as.vector(W_bin_mat[,i])\n    W_cont=as.vector(W_cont_mat[,i])\n\n    m = length(W_bin)\n\n    OD <- Data[order(Data$filter,decreasing=T),]\t\t# odered by covariate\n    Ordered.pvalue <- OD$pval\t\t\t\t\t# odered pvalues for all tests\n\n    # preprocesing before counting rejections\n    #----------------------------------------\n    ihw_res_bon <- ihw(Data$pval,Data$filter, alpha=alpha, nbins=4,nsplits_internal=5,\n                       lambdas=seq(0,3,length=20),adjustment_type = \"bonferroni\")\n    padj_Pro_bin <-p.adjust(Ordered.pvalue/W_bin, method = \"BH\")\t\t# proposed method based on right-tailed pvalue\n    padj_Pro_cont <-p.adjust(Ordered.pvalue/W_cont, method = \"BH\")\n    padj_BH <- p.adjust(Data$pval, method = \"BH\")\n    ihw_res_fdr <- ihw(Data$pval,Data$filter, alpha=alpha, nbins=13,nsplits_internal=5L,\n                       nfolds_internal=4L)\n\n    # rejections by FWER\n    #-------------------\n    Pro_bon_bin = sum(Ordered.pvalue <= alpha*W_bin/m, na.rm = TRUE)\n    Pro_bon_cont = sum(Ordered.pvalue <= alpha*W_cont/m, na.rm = TRUE)\n    bon = sum(Data$pval <= alpha/m, na.rm = TRUE)\n    ihw_bon = rejections(ihw_res_bon)\n\n    # rejections by FDR\n    #------------------\n    Pro_bh_bin = sum(padj_Pro_bin <= alpha, na.rm = TRUE)\n    Pro_bh_cont = sum(padj_Pro_cont <= alpha, na.rm = TRUE)\n    bh = sum(padj_BH <= alpha, na.rm = TRUE)\n    ihw_bh = rejections(ihw_res_fdr)\n\n    return(c(Pro_bon_bin,Pro_bon_cont,bon,ihw_bon,Pro_bh_bin,Pro_bh_cont,bh,ihw_bh))\n}\nrej_mat_bot = sapply(1:length(alphaVec),fun.rejections,alphaVec,Data=Data,W_bin_mat=w_bin,W_cont_mat=w_cont)\n\n\n# > rej_mat_bot\n# [,1] [,2] [,3] [,4] [,5]\n# [1,]  214  233  239  251  263\n# [2,]  217  233  244  262  269\n# [3,]  116  126  131  136  145\n# [4,]  166  188  192  194  199\n# [5,] 1422 1622 1831 2047 2321\n# [6,] 1394 1648 1828 2058 2350\n# [7,] 1466 1725 2103 2440 2736\n# [8,] 1629 1946 2240 2529 2820\n\n\nsave.image(\"lipid_scz.Rdata\")\n",
    "created" : 1495910263711.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "3124341102",
    "id" : "2C4567F4",
    "lastKnownWriteTime" : 1495912187,
    "last_content_update" : 1495912182100,
    "path" : "U:/Documents/My Research (UGA)/Multiple Hypoetheses/Article-3/Article-3-version-1.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}