}
c = uniroot(f, c(0, 10))$root
c_vec = c(c_vec, c)
}
w = (m/alpha)*pnorm(c_vec, lower.tail = FALSE)
sum(w)
n = m - length(w)
w = c(w, rep(1, n))
w_exact1 = w/sum(w)*m
alpha = .0625
c_vec <- NULL
for(r in p_exact_bot)
{
f <- function(c)
{
f_eps <- function(eps)
{
exp(c*eps - eps**2/2)*r*dnorm(eps, et_cont, 1)
#dnorm(c - eps)*m*ranksProb*dnorm(eps, eita, sigma)
}
int <- integrate(f_eps, -Inf, Inf)$value
return(int - delta/alpha)
}
c = uniroot(f, c(0, 10))$root
c_vec = c(c_vec, c)
}
w = (m/alpha)*pnorm(c_vec, lower.tail = FALSE)
sum(w)
n = m - length(w)
w = c(w, rep(1, n))
w_exact2 = w/sum(w)*m
alpha = .075
c_vec <- NULL
for(r in p_exact_bot)
{
f <- function(c)
{
f_eps <- function(eps)
{
exp(c*eps - eps**2/2)*r*dnorm(eps, et_cont, 1)
#dnorm(c - eps)*m*ranksProb*dnorm(eps, eita, sigma)
}
int <- integrate(f_eps, -Inf, Inf)$value
return(int - delta/alpha)
}
c = uniroot(f, c(0, 10))$root
c_vec = c(c_vec, c)
}
w = (m/alpha)*pnorm(c_vec, lower.tail = FALSE)
sum(w)
n = m - length(w)
w = c(w, rep(1, n))
w_exact3 = w/sum(w)*m
alpha = .0875
c_vec <- NULL
for(r in p_exact_bot)
{
f <- function(c)
{
f_eps <- function(eps)
{
exp(c*eps - eps**2/2)*r*dnorm(eps, et_cont, 1)
#dnorm(c - eps)*m*ranksProb*dnorm(eps, eita, sigma)
}
int <- integrate(f_eps, -Inf, Inf)$value
return(int - delta/alpha)
}
c = uniroot(f, c(0, 10))$root
c_vec = c(c_vec, c)
}
w = (m/alpha)*pnorm(c_vec, lower.tail = FALSE)
sum(w)
n = m - length(w)
w = c(w, rep(1, n))
w_exact4 = w/sum(w)*m
alpha = .1
c_vec <- NULL
for(r in p_exact_bot)
{
f <- function(c)
{
f_eps <- function(eps)
{
exp(c*eps - eps**2/2)*r*dnorm(eps, et_cont, 1)
#dnorm(c - eps)*m*ranksProb*dnorm(eps, eita, sigma)
}
int <- integrate(f_eps, -Inf, Inf)$value
return(int - delta/alpha)
}
c = uniroot(f, c(0, 10))$root
c_vec = c(c_vec, c)
}
w = (m/alpha)*pnorm(c_vec, lower.tail = FALSE)
sum(w)
n = m - length(w)
w = c(w, rep(1, n))
w_exact5 = w/sum(w)*m
w_exact_bot <- cbind(w_exact1, w_exact2, w_exact3, w_exact4, w_exact5)
w_approx_bot = w_cont
w_approx_bot
ey_cont
prob_cont <-vapply(1:m, prob_rank_givenEffect, 1, et = ey_cont,
ey = ey_cont, nrep = nrep, m0 = m0, m1 = m1)
w_cont = sapply(alphaVec, weight_continuous, et = et_cont, m = m, tail = 1,
delInterval=.0001 , ranksProb = prob_cont)
w_approx_bot = w_cont
x_vec = 1:dim(w_approx_bot)[1]
y_matrix = cbind(SMA(w_exact_bot[,1], n = 100), SMA(w_approx_bot[,1], n = 100))
plt_w_bot <- nice_plots2(x_vec = x_vec, y_matrix = y_matrix, x_name = "ranks",
y_names = c("w_exact", "w_approx"), xlab = "Ranks",
ylab = "Weights", title = "Bottomly")
rej_mat_exact_bot = sapply(1:length(alphaVec),fun.rejections2,alphaVec,
Data=Data,W_cont_mat=w_exact_bot)
x_vec = alphaVec
y_matrix = cbind(rej_mat_exact_bot, rej_mat_approx_bot)
plt_rej_bot <- nice_plots2(x_vec = x_vec, y_matrix = y_matrix, x_name = "alpha",
y_names = c("r_exact", "r_approx"),
xlab = expression(bold(paste("Nominal ",alpha))),
ylab = "Discoveries", title = "Bottomly")
plt_w_bot
plt_rej_bot
delta = .02
alpha = .05
c_vec <- NULL
for(r in p_exact_bot)
{
f <- function(c)
{
f_eps <- function(eps)
{
exp(c*eps - eps**2/2)*r*dnorm(eps, et_cont, 1)
#dnorm(c - eps)*m*ranksProb*dnorm(eps, eita, sigma)
}
int <- integrate(f_eps, -Inf, Inf)$value
return(int - delta/alpha)
}
c = uniroot(f, c(0, 10))$root
c_vec = c(c_vec, c)
}
w = (m/alpha)*pnorm(c_vec, lower.tail = FALSE)
sum(w)
n = m - length(w)
w = c(w, rep(1, n))
w_exact1 = w/sum(w)*m
alpha = .0625
c_vec <- NULL
for(r in p_exact_bot)
{
f <- function(c)
{
f_eps <- function(eps)
{
exp(c*eps - eps**2/2)*r*dnorm(eps, et_cont, 1)
#dnorm(c - eps)*m*ranksProb*dnorm(eps, eita, sigma)
}
int <- integrate(f_eps, -Inf, Inf)$value
return(int - delta/alpha)
}
c = uniroot(f, c(0, 10))$root
c_vec = c(c_vec, c)
}
w = (m/alpha)*pnorm(c_vec, lower.tail = FALSE)
sum(w)
n = m - length(w)
w = c(w, rep(1, n))
w_exact2 = w/sum(w)*m
alpha = .075
c_vec <- NULL
for(r in p_exact_bot)
{
f <- function(c)
{
f_eps <- function(eps)
{
exp(c*eps - eps**2/2)*r*dnorm(eps, et_cont, 1)
#dnorm(c - eps)*m*ranksProb*dnorm(eps, eita, sigma)
}
int <- integrate(f_eps, -Inf, Inf)$value
return(int - delta/alpha)
}
c = uniroot(f, c(0, 10))$root
c_vec = c(c_vec, c)
}
w = (m/alpha)*pnorm(c_vec, lower.tail = FALSE)
sum(w)
n = m - length(w)
w = c(w, rep(1, n))
# w_exact1 = w/sum(w)*m
w_exact3 = w/sum(w)*m
alpha = .0875
c_vec <- NULL
for(r in p_exact_bot)
{
f <- function(c)
{
f_eps <- function(eps)
{
exp(c*eps - eps**2/2)*r*dnorm(eps, et_cont, 1)
#dnorm(c - eps)*m*ranksProb*dnorm(eps, eita, sigma)
}
int <- integrate(f_eps, -Inf, Inf)$value
return(int - delta/alpha)
}
c = uniroot(f, c(0, 10))$root
c_vec = c(c_vec, c)
}
w = (m/alpha)*pnorm(c_vec, lower.tail = FALSE)
sum(w)
n = m - length(w)
w = c(w, rep(1, n))
w_exact4 = w/sum(w)*m
alpha = .1
c_vec <- NULL
for(r in p_exact_bot)
{
f <- function(c)
{
f_eps <- function(eps)
{
exp(c*eps - eps**2/2)*r*dnorm(eps, et_cont, 1)
#dnorm(c - eps)*m*ranksProb*dnorm(eps, eita, sigma)
}
int <- integrate(f_eps, -Inf, Inf)$value
return(int - delta/alpha)
}
c = uniroot(f, c(0, 10))$root
c_vec = c(c_vec, c)
}
w = (m/alpha)*pnorm(c_vec, lower.tail = FALSE)
sum(w)
n = m - length(w)
w = c(w, rep(1, n))
w_exact5 = w/sum(w)*m
w_exact_bot <- cbind(w_exact1, w_exact2, w_exact3, w_exact4, w_exact5)
x_vec = 1:dim(w_approx_bot)[1]
y_matrix = cbind(SMA(w_exact_bot[,1], n = 100), SMA(w_approx_bot[,1], n = 100))
plt_w_bot <- nice_plots2(x_vec = x_vec, y_matrix = y_matrix, x_name = "ranks",
y_names = c("w_exact", "w_approx"), xlab = "Ranks",
ylab = "Weights", title = "Bottomly")
rej_mat_exact_bot = sapply(1:length(alphaVec),fun.rejections2,alphaVec,
Data=Data,W_cont_mat=w_exact_bot)
rej_mat_approx_bot = rej_mat_bot_FDR[,2]
x_vec = alphaVec
y_matrix = cbind(rej_mat_exact_bot, rej_mat_approx_bot)
plt_rej_bot <- nice_plots2(x_vec = x_vec, y_matrix = y_matrix, x_name = "alpha",
y_names = c("r_exact", "r_approx"),
xlab = expression(bold(paste("Nominal ",alpha))),
ylab = "Discoveries", title = "Bottomly")
plt_w_bot
plt_rej_bot
delta = .01
# alphaVec = seq(.05,.1,length.out = 5)
# alpha = .05
# alpha = .0625
# alpha = .075
# alpha = .0875
# alpha = .1
c_vec <- NULL
for(r in p_exact_bot)
{
f <- function(c)
{
f_eps <- function(eps)
{
exp(c*eps - eps**2/2)*r*dnorm(eps, et_cont, 1)
#dnorm(c - eps)*m*ranksProb*dnorm(eps, eita, sigma)
}
int <- integrate(f_eps, -Inf, Inf)$value
return(int - delta/alpha)
}
c = uniroot(f, c(0, 10))$root
c_vec = c(c_vec, c)
}
w = (m/alpha)*pnorm(c_vec, lower.tail = FALSE)
sum(w)
n = m - length(w)
w = c(w, rep(1, n))
w_exact1 = w/sum(w)*m
alpha = .0625
c_vec <- NULL
for(r in p_exact_bot)
{
f <- function(c)
{
f_eps <- function(eps)
{
exp(c*eps - eps**2/2)*r*dnorm(eps, et_cont, 1)
#dnorm(c - eps)*m*ranksProb*dnorm(eps, eita, sigma)
}
int <- integrate(f_eps, -Inf, Inf)$value
return(int - delta/alpha)
}
c = uniroot(f, c(0, 10))$root
c_vec = c(c_vec, c)
}
w = (m/alpha)*pnorm(c_vec, lower.tail = FALSE)
sum(w)
n = m - length(w)
w = c(w, rep(1, n))
w_exact2 = w/sum(w)*m
alpha = .075
c_vec <- NULL
for(r in p_exact_bot)
{
f <- function(c)
{
f_eps <- function(eps)
{
exp(c*eps - eps**2/2)*r*dnorm(eps, et_cont, 1)
#dnorm(c - eps)*m*ranksProb*dnorm(eps, eita, sigma)
}
int <- integrate(f_eps, -Inf, Inf)$value
return(int - delta/alpha)
}
c = uniroot(f, c(0, 10))$root
c_vec = c(c_vec, c)
}
w = (m/alpha)*pnorm(c_vec, lower.tail = FALSE)
sum(w)
n = m - length(w)
w = c(w, rep(1, n))
w_exact3 = w/sum(w)*m
alpha = .0875
c_vec <- NULL
for(r in p_exact_bot)
{
f <- function(c)
{
f_eps <- function(eps)
{
exp(c*eps - eps**2/2)*r*dnorm(eps, et_cont, 1)
#dnorm(c - eps)*m*ranksProb*dnorm(eps, eita, sigma)
}
int <- integrate(f_eps, -Inf, Inf)$value
return(int - delta/alpha)
}
c = uniroot(f, c(0, 10))$root
c_vec = c(c_vec, c)
}
w = (m/alpha)*pnorm(c_vec, lower.tail = FALSE)
sum(w)
n = m - length(w)
w = c(w, rep(1, n))
w_exact4 = w/sum(w)*m
alpha = .1
c_vec <- NULL
for(r in p_exact_bot)
{
f <- function(c)
{
f_eps <- function(eps)
{
exp(c*eps - eps**2/2)*r*dnorm(eps, et_cont, 1)
#dnorm(c - eps)*m*ranksProb*dnorm(eps, eita, sigma)
}
int <- integrate(f_eps, -Inf, Inf)$value
return(int - delta/alpha)
}
c = uniroot(f, c(0, 10))$root
c_vec = c(c_vec, c)
}
w = (m/alpha)*pnorm(c_vec, lower.tail = FALSE)
sum(w)
n = m - length(w)
w = c(w, rep(1, n))
w_exact5 = w/sum(w)*m
w_exact_bot <- cbind(w_exact1, w_exact2, w_exact3, w_exact4, w_exact5)
w_approx_bot = w_cont
x_vec = 1:dim(w_approx_bot)[1]
y_matrix = cbind(SMA(w_exact_bot[,1], n = 100), SMA(w_approx_bot[,1], n = 100))
plt_w_bot <- nice_plots2(x_vec = x_vec, y_matrix = y_matrix, x_name = "ranks",
y_names = c("w_exact", "w_approx"), xlab = "Ranks",
ylab = "Weights", title = "Bottomly")
rej_mat_exact_bot = sapply(1:length(alphaVec),fun.rejections2,alphaVec,
Data=Data,W_cont_mat=w_exact_bot)
rej_mat_approx_bot = rej_mat_bot_FDR[,2]
x_vec = alphaVec
y_matrix = cbind(rej_mat_exact_bot, rej_mat_approx_bot)
plt_rej_bot <- nice_plots2(x_vec = x_vec, y_matrix = y_matrix, x_name = "alpha",
y_names = c("r_exact", "r_approx"),
xlab = expression(bold(paste("Nominal ",alpha))),
ylab = "Discoveries", title = "Bottomly")
pp_ex <- plot_grid(plt_p_bot, plt_w_bot, plt_rej_bot, plt_p_prot, plt_w_prot, plt_rej_prot,
nrow = 2, labels = c("a", " ", " ", "b"), align = 'v')
title_ex <- ggdraw() + draw_label("Resutls of exact vs. approximate wieghts")
plts = plot_grid(title_ex, pp_ex, legend_ex, ncol = 1, rel_heights = c(.1, 1, .1))
plts
# data processing
#-------------------------
proteomics_file <- system.file("extdata/real_data","science_signaling.csv", package = "IHWpaper")
proteomics_df <- read.csv(proteomics_file, stringsAsFactors = F)
# pvalues were adjusted by BH method so rewrite to obtain orginal pvlaues
proteomics_df$pvalue <- rank(proteomics_df$p1, ties.method="first")*proteomics_df$p1/nrow(proteomics_df)
proteomics_df$test = qnorm(proteomics_df$pvalue, lower.tail = F)
names(proteomics_df)
test = proteomics_df$test
test[test == -Inf] <- NA
test[test == Inf] <- NA
pval = proteomics_df$pvalue
filter = proteomics_df$X..peptides
#hist(pval)  # one-tailed pvalue
Data <- tibble(test, pval, filter)	# data of filter covariate and pvlaues
bc2 <- boxcox(filter ~ test)
trans2 <- bc2$x[which.max(bc2$y)]
model_prot <- lm(filter^trans2 ~ test)
#fit simple regression to obtain filter and test effect sizes
#-------------------------------------------------------------
nrep = 10000
m = length(pval)
#null=propTrueNull(proteomics_df$pvalue)
null = qvalue(pval, pi0.method = "bootstrap")$pi0
m0 = ceiling(null*m)
m1 = m-m0
test_effect = if(m1 == 0) {0
} else {sort(test, decreasing = T)[1:m1]}		# two-tailed test
et_cont = mean(test_effect, na.rm = T)
ey_cont = model_prot$coef[[1]] + model_prot$coef[[2]]*et_cont
et_bin = median(test_effect, na.rm = T)
ey_bin = model_prot$coef[[1]] + model_prot$coef[[2]]*et_bin
prob_cont <-vapply(1:m, prob_rank_givenEffect, 1, et = ey_cont,
ey = ey_cont, nrep = nrep, m0 = m0, m1 = m1)
w_cont = sapply(alphaVec, weight_continuous, et = et_cont, m = m, tail = 1,
delInterval=.0001 , ranksProb = prob_cont)
set.seed(123)
# covariates <- (filter - mean(filter, na.rm=TRUE))/sd(filter, na.rm=TRUE)
# topCov <- sort(covariates, decreasing = TRUE)[1:m1]
fl = filter^trans2
fl2 = sort(fl,decreasing=T)[1:m1]
eita <- mean(fl2, na.rm = TRUE)
sigma <- sd(fl2, na.rm = TRUE)
p_exact_prot <- sapply(1:m, ranksProb_by_normal, eita = eita, sigma = sigma, nrep = 10000,
m0 = m0, m1 = m1, effectType = "continuous")
eita
sigma
# c based-----------(proteomics)
delta = .01
alphafun <- function(alpha)
{
by_ranksProb <- function(ranksProb)
{
f <- function(c)
{
f_eps <- function(eps)
{
exp(c*eps - eps**2/2)*ranksProb*dnorm(eps, eita, 1)
#dnorm(c - eps)*m*ranksProb*dnorm(eps, eita, sigma)
}
int <- integrate(f_eps, -Inf, Inf)$value
return(int - delta/alpha)
}
return(uniroot(f, c(0, 10))$root)
}
c_vec = sapply(ranksProb_cont, by_ranksProb)
w = (m/alpha)*pnorm(c_vec, lower.tail = FALSE)
w_norm = w/sum(w)*m
return(w_norm)
}
x_vec = 1:length(p_exact_prot)[1]
y_matrix = cbind(SMA(p_exact_prot, n = 100), SMA(p_approx_prot, n = 100))
plt_p_prot <- nice_plots2(x_vec = x_vec, y_matrix = y_matrix, x_name = "ranks",
y_names = c("p_exact", "p_approx"), xlab = "Ranks",
ylab = "P(ranks|effect)", title = "Proteomics")
alphaVec = seq(.05,.1,length.out = 5)
w_approx_prot = w_cont
w_exact_prot = sapply(alphaVec, alphafun)
x_vec = 1:dim(w_approx_prot)[1]
y_matrix = cbind(SMA(w_exact_prot[,1], n = 100), SMA(w_approx_prot[,1], n = 100))
plt_w_prot <- nice_plots2(x_vec = x_vec, y_matrix = y_matrix, x_name = "ranks",
y_names = c("w_exact", "w_approx"), xlab = "Ranks",
ylab = "Weights", title = "Proteomics")
rej_mat_exact_prot = sapply(1:length(alphaVec),fun.rejections2,alphaVec,Data=Data,W_cont_mat=w_exact_prot)
rej_mat_approx_prot = rej_mat_prot_FDR[,2]
x_vec = alphaVec
y_matrix = cbind(rej_mat_exact_prot, rej_mat_approx_prot)
plt_rej_prot <- nice_plots2(x_vec = x_vec, y_matrix = y_matrix, x_name = "alpha",
y_names = c("r_exact", "r_approx"),
xlab = expression(bold(paste("Nominal ",alpha))),
ylab = "Discoveries", title = "Proteomics")
legend_ex <- get_legend(plt_rej_prot + theme(legend.direction = "horizontal",
legend.position = "bottom"))
plt_rej_prot <- plt_rej_prot + theme(legend.position = "none")
pp_ex <- plot_grid(plt_p_bot, plt_w_bot, plt_rej_bot, plt_p_prot, plt_w_prot, plt_rej_prot,
nrow = 2, labels = c("a", " ", " ", "b"), align = 'v')
title_ex <- ggdraw() + draw_label("Resutls of exact vs. approximate wieghts")
plts = plot_grid(title_ex, pp_ex, legend_ex, ncol = 1, rel_heights = c(.1, 1, .1))
plts
plt_rej_prot <- plt_rej_prot + theme(legend.position = "none")
pp_ex <- plot_grid(plt_p_bot, plt_w_bot, plt_rej_bot, plt_p_prot, plt_w_prot, plt_rej_prot,
nrow = 2, labels = c("a", " ", " ", "b"), align = 'v')
title_ex <- ggdraw() + draw_label("Resutls of exact vs. approximate wieghts")
plts = plot_grid(title_ex, pp_ex, legend_ex, ncol = 1, rel_heights = c(.1, 1, .1))
plts
plt_rej_prot
plt_rej_prot
plt_w_prot
# for legends----------
dat_rej_prot <- data.frame(alphaVec, rej_mat_exact_prot, rej_mat_approx_prot)
colnames(dat_rej_prot) <- c("alpha", "exact", "approx")
dat_melt_rej_prot <- melt(dat_rej_prot, id.vars = "alpha")
plt_rej_prot <- ggplot(dat_melt_rej_prot, aes_string(x = "alpha", y = "value",
group = "variable", col = "variable")) +
geom_line(size = 1.5) +
labs(x = expression(bold(paste("Nominal ",alpha))), y = "Discoveries", title = "Proteomics")+
theme(legend.title = element_blank())
legend_ex <- get_legend(plt_rej_prot + theme(legend.direction = "horizontal",
legend.position = "bottom"))
plt_rej_prot <- plt_rej_prot + theme(legend.position = "none")
pp_ex <- plot_grid(plt_p_bot, plt_w_bot, plt_rej_bot, plt_p_prot, plt_w_prot, plt_rej_prot,
nrow = 2, labels = c("a", " ", " ", "b"), align = 'v')
title_ex <- ggdraw() + draw_label("Resutls of exact vs. approximate wieghts")
plts = plot_grid(title_ex, pp_ex, legend_ex, ncol = 1, rel_heights = c(.1, 1, .1))
plts
