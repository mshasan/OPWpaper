title <- ggdraw() + draw_label("Power: et ~ Normal(ey, CV*ey), null = 90%")
plot_grid(title, p_cv_power_90, legend, ncol = 1, rel_heights=c(.1, 1, .1))
nice_plots <- function(x_vec, y_matrix, fdr = TRUE, power = TRUE, low_eff_plot = FALSE,
null = NULL, cv = NULL, ey = NULL, cor = NULL,
figure = c("ranksProb", "nullPropVsPower", "effectVsFPFP", "CV"))
{
# configure data sets-------------
if(figure == "ranksProb"){
x_axis = "ranks"
x_lab = "Ranks"
y_lab = "p(ranks | effect)"
dat <- data.frame(x_vec, y_matrix)
} else if(figure == "nullPropVsPower"){
x_axis <- "nullProp"
x_lab = "Prop. of null"
y_lab <- "Power"
dat <- data.frame(x_vec, y_matrix)
} else {
if(fdr == FALSE & power == FALSE){
row_indx <- 1:4
y_lab <- "FWER"
} else if(fdr == FALSE & power == TRUE) {
row_indx <- 5:8
y_lab <- "Power"
} else if(fdr == TRUE & power == FALSE){
row_indx <- 9:12
y_lab <- "FDR"
} else {
row_indx <- 13:16
y_lab <- "Power"
}
x_axis <- "effectSize"
x_lab = "Mean filter effect (ey)"
dat <- data.frame(x_vec, t(y_matrix[row_indx, ]))
}
# label the columns--------
if(figure == "ranksProb"){
colnames(dat) <- c(x_axis, "FH0","FH1","TH0","TH1")
} else {
colnames(dat) <- c(x_axis, "PRO", "BH", "RDW", "IHW")
}
# initial plot with melted data-------------
if(low_eff_plot == FALSE){
dat_melt <- melt(dat, id.var = x_axis)
plt <- ggplot(dat_melt, aes(x = dat_melt[,1], y = dat_melt$value,
group = dat_melt$variable, col = dat_melt$variable))
} else {
y_lab <- "log(power)"
dat <- dat[1:6, ]
dat_melt <- melt(dat, id.var = x_axis)
plt <- ggplot(dat_melt, aes(x = dat_melt[,1], y = log(dat_melt$value),
group = dat_melt$variable, col = dat_melt$variable))
}
# fixed the tilte of the plot---------------
if(figure == "ranksProb"){
titl <- paste0("cor = ", cor)
} else if(figure == "nullPropVsPower"){
titl <- paste0("ey = ", ey)
} else if(figure == "effectVsFPFP"){
titl <- paste0("null = ", null, "%")
} else {
titl <- paste0("cv = ", cv)
}
# final plot with titles and labels----------
plt = plt + geom_line(aes(linetype = dat_melt$variable), size = 1.5) +
labs(x = x_lab, y = y_lab, title = if(low_eff_plot == FALSE){titl}) +
theme(legend.position = "none",
axis.title.x = element_text(size = rel(.8)),
axis.title.y = element_text(size = rel(.8)))
return(plt)
}
ranks = 1:100
datRelaion1 <- data.frame(ranks, prob0_ed2, prob1_ed2, prob_test0_cor.2_ed2, prob_test1_cor.2_ed2)
datRelaion1 <- data.frame(ranks, prob0_ed2, prob1_ed2, prob_test0_cor.2_ed2, prob_test1_cor.2_ed2)
colnames(datRelaion1) <- c("ranks", "FH0","FH1","TH0","TH1")
load("U:/Documents/My Research (UGA)/Multiple Hypoetheses/Article-1/smu_relation_filterTest.RDATA")
datRelaion1 <- data.frame(ranks, prob0_ed2, prob1_ed2, prob_test0_cor.2_ed2, prob_test1_cor.2_ed2)
colnames(datRelaion1) <- c("ranks", "FH0","FH1","TH0","TH1")
datRelaion1_melt1 <- melt(datRelaion1, id.var="ranks")
p_.2 <- ggplot(datRelaion1_melt1, aes(x = ranks, y = value, group = variable, colour = variable)) +
geom_line(aes(linetype = variable), size = 1.5) +
labs(x = "ranks", y = "p(rank | effect)", title = "cor = .5") +
theme(legend.title = element_blank(), legend.position="bottom")
legend_rel <- get_legend(p_.2 + theme(legend.direction="horizontal", legend.position="bottom"))
nullProp <- c(20, 50, 75, 90, 99)
mat_ef.6<- rbind(FwerPowerFdrPower1f1[13:16, 4], FwerPowerFdrPower2f1[13:16, 4],
FwerPowerFdrPower3f1[13:16, 4], FwerPowerFdrPower4f1[13:16, 4],
FwerPowerFdrPower5f1[13:16, 4])
p_ef.6 <- nice_plots(x_vec = nullProp, y_matrix = mat_ef.6, ey = 0.6, figure = "nullPropVsPower")
mat_ef1 <- rbind(FwerPowerFdrPower1f1[13:16, 6], FwerPowerFdrPower2f1[13:16, 6],
FwerPowerFdrPower3f1[13:16, 6], FwerPowerFdrPower4f1[13:16, 6],
FwerPowerFdrPower5f1[13:16, 6])
p_ef1 <- nice_plots(x_vec = nullProp, y_matrix = mat_ef1, ey = 1.0, figure = "nullPropVsPower")
mat_ef3 <- rbind(FwerPowerFdrPower1f1[13:16, 8], FwerPowerFdrPower2f1[13:16, 8],
FwerPowerFdrPower3f1[13:16, 8], FwerPowerFdrPower4f1[13:16, 8],
FwerPowerFdrPower5f1[13:16, 8])
p_ef3 <- nice_plots(x_vec = nullProp, y_matrix = mat_ef3, ey = 3.0, figure = "nullPropVsPower")
plot_cor.3 <- plot_grid(p_ef.6, p_ef1, p_ef3, align = 'hv', ncol = 3, labels=letters[1:3])
title <- ggdraw() + draw_label("corr = 0.3", fontface='bold')
plot_cor.3_title <- plot_grid(title, plot_cor.3, ncol=1, rel_heights=c(0.1, 1), align = 'hv')
mat_ef.6.7 <- rbind(FwerPowerFdrPower1h1[13:16, 4], FwerPowerFdrPower2h1[13:16, 4],
FwerPowerFdrPower3h1[13:16, 4], FwerPowerFdrPower4h1[13:16, 4],
FwerPowerFdrPower5h1[13:16, 4])
p_ef.6.7 <- nice_plots(x_vec = nullProp, y_matrix = mat_ef.6.7, ey = 0.6, figure = "nullPropVsPower")
mat_ef1.7 <- rbind(FwerPowerFdrPower1h1[13:16, 6], FwerPowerFdrPower2h1[13:16, 6],
FwerPowerFdrPower3h1[13:16, 6], FwerPowerFdrPower4h1[13:16, 6],
FwerPowerFdrPower5h1[13:16, 6])
p_ef1.7 <- nice_plots(x_vec = nullProp, y_matrix = mat_ef1.7, ey = 1.0, figure = "nullPropVsPower")
mat_ef3.7 <- rbind(FwerPowerFdrPower1h1[13:16, 8], FwerPowerFdrPower2h1[13:16, 8],
FwerPowerFdrPower3h1[13:16, 8], FwerPowerFdrPower4h1[13:16, 8],
FwerPowerFdrPower5h1[13:16, 8])
p_ef3.7 <- nice_plots(x_vec = nullProp, y_matrix = mat_ef3.7, ey = 3.0, figure = "nullPropVsPower")
plot_cor.7 <- plot_grid(p_ef.6.7, p_ef1.7, p_ef3.7, align = 'hv', ncol = 3, labels=letters[4:6])
title <- ggdraw() + draw_label("corr = 0.7", fontface='bold')
plot_cor.7_title <- plot_grid(title, plot_cor.7, ncol=1, rel_heights=c(0.1, 1), align = 'hv')
p_prop = plot_grid(plot_cor.3_title, plot_cor.7_title, ncol = 1, align = 'hv')
title_main <- ggdraw() + draw_label("Binary: Power vs. prop. of null")
plot_grid(title_main, p_prop, legend, ncol = 1, rel_heights=c(.1, 1, .1))
rm(list=ls())
load("U:/Documents/My Research (UGA)/Multiple Hypoetheses/Article-1/simu_fwerPowerFdrPower_cont.RDATA")
# this part is for legend------------------------------------------------------
ey_vec <- c(seq(0, 1, .2), 2, 3, 5, 8)
dat_99 <- data.frame(ey_vec, t(FwerPowerFdrPower5e1[13:16,]))
colnames(dat_99) <- c("effectSize", "PRO", "BH", "RDW", "IHW")
dat_99_par <- melt(dat_99[1:6,], id.var = "effectSize")
p_99_par <- ggplot(dat_99_par, aes(x = effectSize, y = value,group = variable,
col=variable)) +
geom_line(aes(linetype = variable), size = 1.5) +
labs(x = "ey", y = "power", title = "null = 99%") +
theme(legend.title = element_blank())
legend <- get_legend(p_99_par + theme(legend.direction = "horizontal",
legend.position = "bottom"))
nullProp <- c(20, 50, 75, 90, 99)
# corr = .3-------------
mat_ef.6<- rbind(FwerPowerFdrPower1f1[13:16, 4], FwerPowerFdrPower2f1[13:16, 4],
FwerPowerFdrPower3f1[13:16, 4], FwerPowerFdrPower4f1[13:16, 4],
FwerPowerFdrPower5f1[13:16, 4])
p_ef.6 <- nice_plots(x_vec = nullProp, y_matrix = mat_ef.6, ey = 0.6, figure = "nullPropVsPower")
mat_ef1 <- rbind(FwerPowerFdrPower1f1[13:16, 6], FwerPowerFdrPower2f1[13:16, 6],
FwerPowerFdrPower3f1[13:16, 6], FwerPowerFdrPower4f1[13:16, 6],
FwerPowerFdrPower5f1[13:16, 6])
p_ef1 <- nice_plots(x_vec = nullProp, y_matrix = mat_ef1, ey = 1.0, figure = "nullPropVsPower")
mat_ef3 <- rbind(FwerPowerFdrPower1f1[13:16, 8], FwerPowerFdrPower2f1[13:16, 8],
FwerPowerFdrPower3f1[13:16, 8], FwerPowerFdrPower4f1[13:16, 8],
FwerPowerFdrPower5f1[13:16, 8])
p_ef3 <- nice_plots(x_vec = nullProp, y_matrix = mat_ef3, ey = 3.0, figure = "nullPropVsPower")
plot_cor.3 <- plot_grid(p_ef.6, p_ef1, p_ef3, align = 'hv', ncol = 3, labels=letters[1:3])
title <- ggdraw() + draw_label("corr = 0.3", fontface='bold')
plot_cor.3_title <- plot_grid(title, plot_cor.3, ncol=1, rel_heights=c(0.1, 1), align = 'hv')
# corr = .7 -------------
mat_ef.6.7 <- rbind(FwerPowerFdrPower1h1[13:16, 4], FwerPowerFdrPower2h1[13:16, 4],
FwerPowerFdrPower3h1[13:16, 4], FwerPowerFdrPower4h1[13:16, 4],
FwerPowerFdrPower5h1[13:16, 4])
p_ef.6.7 <- nice_plots(x_vec = nullProp, y_matrix = mat_ef.6.7, ey = 0.6, figure = "nullPropVsPower")
mat_ef1.7 <- rbind(FwerPowerFdrPower1h1[13:16, 6], FwerPowerFdrPower2h1[13:16, 6],
FwerPowerFdrPower3h1[13:16, 6], FwerPowerFdrPower4h1[13:16, 6],
FwerPowerFdrPower5h1[13:16, 6])
p_ef1.7 <- nice_plots(x_vec = nullProp, y_matrix = mat_ef1.7, ey = 1.0, figure = "nullPropVsPower")
mat_ef3.7 <- rbind(FwerPowerFdrPower1h1[13:16, 8], FwerPowerFdrPower2h1[13:16, 8],
FwerPowerFdrPower3h1[13:16, 8], FwerPowerFdrPower4h1[13:16, 8],
FwerPowerFdrPower5h1[13:16, 8])
p_ef3.7 <- nice_plots(x_vec = nullProp, y_matrix = mat_ef3.7, ey = 3.0, figure = "nullPropVsPower")
plot_cor.7 <- plot_grid(p_ef.6.7, p_ef1.7, p_ef3.7, align = 'hv', ncol = 3, labels=letters[4:6])
title <- ggdraw() + draw_label("corr = 0.7", fontface='bold')
plot_cor.7_title <- plot_grid(title, plot_cor.7, ncol=1, rel_heights=c(0.1, 1), align = 'hv')
# for the main title------------
p_prop = plot_grid(plot_cor.3_title, plot_cor.7_title, ncol = 1, align = 'hv')
title_main <- ggdraw() + draw_label("Binary: Power vs. prop. of null")
# make sure get legend----------
plot_grid(title_main, p_prop, legend, ncol = 1, rel_heights=c(.1, 1, .1))
plot_grid(title_main, p_prop, legend, ncol = 1, rel_heights=c(.1, 1, .1))
rm(list=ls())
ranks = 1:100
datRelaion1 <- data.frame(ranks, prob0_ed2, prob1_ed2, prob_test0_cor.2_ed2, prob_test1_cor.2_ed2)
colnames(datRelaion1) <- c("ranks", "FH0","FH1","TH0","TH1")
load("U:/Documents/My Research (UGA)/Multiple Hypoetheses/Article-1/smu_relation_filterTest.RDATA")
ranks = 1:100
datRelaion1 <- data.frame(ranks, prob0_ed2, prob1_ed2, prob_test0_cor.2_ed2, prob_test1_cor.2_ed2)
colnames(datRelaion1) <- c("ranks", "FH0","FH1","TH0","TH1")
datRelaion1_melt1 <- melt(datRelaion1, id.var="ranks")
p_.2 <- ggplot(datRelaion1_melt1, aes(x = ranks, y = value, group = variable, colour = variable)) +
geom_line(aes(linetype = variable), size = 1.5) +
labs(x = "ranks", y = "p(rank | effect)", title = "cor = .5") +
theme(legend.title = element_blank(), legend.position="bottom")
legend_rel <- get_legend(p_.2 + theme(legend.direction="horizontal", legend.position="bottom"))
dat_.2_.9_ed2<- cbind(prob0_ed2, prob1_ed2, prob_test0_cor.2_ed2, prob_test1_cor.2_ed2)
p_.2_.9_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.2_.9_ed2, cor = .2, figure = "ranksProb")
dat_.5_.9_ed2<- cbind(prob0_ed2, prob1_ed2, prob_test0_cor.5_ed2, prob_test1_cor.5_ed2)
p_.5_.9_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.5_.9_ed2, cor = .5, figure = "ranksProb")
dat_.8_.9_ed2<- cbind(prob0_ed2, prob1_ed2, prob_test0_cor.8_ed2, prob_test1_cor.8_ed2)
p_.8_.9_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.8_.9_ed2, cor = .8, figure = "ranksProb")
p_rel = plot_grid(p_.2_.9_ed2, p_.5_.9_ed2, p_.8_.9_ed2, ncol = 3, labels = letters[1:3], align = 'hv')
title <- ggdraw() + draw_label("et = 2, m0 = 90, m1 = 90")
plot_grid(title, p_rel, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
dat_.2_.5_ed2<- cbind(prob0_ed2, prob1_ed2, prob_test0_cor.2_ed2, prob_test1_cor.2_ed2)
p_.2_.5_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.2_.9_ed2, cor = .2, figure = "ranksProb")
dat_.5_.5_ed2<- cbind(prob0_ed2, prob1_ed2, prob_test0_cor.5_ed2, prob_test1_cor.5_ed2)
p_.5_.5_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.5_.9_ed2, cor = .5, figure = "ranksProb")
dat_.8_.5_ed2<- cbind(prob0_ed2, prob1_ed2, prob_test0_cor.8_ed2, prob_test1_cor.8_ed2)
p_.8_.5_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.8_.9_ed2, cor = .8, figure = "ranksProb")
p_rel = plot_grid(p_.2_.5_ed2, p_.5_.5_ed2, p_.8_.5_ed2, ncol = 3, labels = letters[1:3], align = 'hv')
title <- ggdraw() + draw_label("et = 2, m0 = 50, m1 = 50")
plot_grid(title, p_rel, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
plot_grid(title, p_rel, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
dat_.2_.9_ed2<- cbind(prob02_ed2, prob12_ed2, prob_test0_cor.22_ed2, prob_test1_cor.22_ed2)
p_.2_.9_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.2_.9_ed2, cor = .2, figure = "ranksProb")
dat_.5_.9_ed2<- cbind(prob02_ed2, prob12_ed2, prob_test0_cor.52_ed2, prob_test1_cor.52_ed2)
p_.5_.9_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.5_.9_ed2, cor = .5, figure = "ranksProb")
dat_.8_.9_ed2<- cbind(prob02_ed2, prob12_ed2, prob_test0_cor.82_ed2, prob_test1_cor.82_ed2)
p_.8_.9_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.8_.9_ed2, cor = .8, figure = "ranksProb")
p_rel = plot_grid(p_.2_.9_ed2, p_.5_.9_ed2, p_.8_.9_ed2, ncol = 3, labels = letters[1:3], align = 'hv')
title <- ggdraw() + draw_label("et = 2, m0 = 90, m1 = 90")
plot_grid(title, p_rel, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
# for 90% and ed = 0 ---------
dat_.2_.9_ed0<- cbind(prob02_ed0, prob12_ed0, prob_test0_cor.22_ed0, prob_test1_cor.22_ed0)
p_.2_.9_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.2_.9_ed0, cor = .2, figure = "ranksProb")
dat_.5_.9_ed0<- cbind(prob02_ed0, prob12_ed0, prob_test0_cor.52_ed0, prob_test1_cor.52_ed0)
p_.5_.9_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.5_.9_ed0, cor = .5, figure = "ranksProb")
dat_.8_.9_ed0<- cbind(prob02_ed0, prob12_ed0, prob_test0_cor.82_ed0, prob_test1_cor.82_ed0)
p_.8_.9_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.8_.9_ed0, cor = .8, figure = "ranksProb")
p_rel3 = plot_grid(p_.2_.9_ed0, p_.5_.9_ed0, p_.8_.9_ed0, ncol = 3, labels = letters[1:3], align = 'hv')
title <- ggdraw() + draw_label("et = 0, m0 = 90, m1 = 90")
plot_grid(title, p_rel, legend_rel3, ncol = 1, rel_heights=c(.1, 1, .1))
plot_grid(title, p_rel3, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
# for 50% and ed = 0-----------------
dat_.2_.5_ed0<- cbind(prob0_ed0, prob1_ed0, prob_test0_cor.2_ed0, prob_test1_cor.2_ed0)
p_.2_.5_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.2_.9_ed0, cor = .2, figure = "ranksProb")
dat_.5_.5_ed0<- cbind(prob0_ed0, prob1_ed0, prob_test0_cor.5_ed0, prob_test1_cor.5_ed0)
p_.5_.5_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.5_.9_ed0, cor = .5, figure = "ranksProb")
dat_.8_.5_ed0<- cbind(prob0_ed0, prob1_ed0, prob_test0_cor.8_ed0, prob_test1_cor.8_ed0)
p_.8_.5_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.8_.9_ed0, cor = .8, figure = "ranksProb")
p_rel4 = plot_grid(p_.2_.5_ed0, p_.5_.5_ed0, p_.8_.5_ed0, ncol = 3, labels = letters[1:3], align = 'hv')
title <- ggdraw() + draw_label("et = 0, m0 = 50, m1 = 50")
plot_grid(title, p_rel4, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
plot_grid(title, p_rel4, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
# for 50% and ed = 2-----------------
dat_.2_.5_ed2<- cbind(prob0_ed2, prob1_ed2, prob_test0_cor.2_ed2, prob_test1_cor.2_ed2)
p_.2_.5_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.2_.9_ed2, cor = .2, figure = "ranksProb")
dat_.5_.5_ed2<- cbind(prob0_ed2, prob1_ed2, prob_test0_cor.5_ed2, prob_test1_cor.5_ed2)
p_.5_.5_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.5_.9_ed2, cor = .5, figure = "ranksProb")
dat_.8_.5_ed2<- cbind(prob0_ed2, prob1_ed2, prob_test0_cor.8_ed2, prob_test1_cor.8_ed2)
p_.8_.5_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.8_.9_ed2, cor = .8, figure = "ranksProb")
p_rel2 = plot_grid(p_.2_.5_ed2, p_.5_.5_ed2, p_.8_.5_ed2, ncol = 3, labels = letters[1:3], align = 'hv')
title <- ggdraw() + draw_label("et = 2, m0 = 50, m1 = 50")
plot_grid(title, p_rel2, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
plot_grid(title, p_rel2, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
# for 50% and ed = 2-----------------
dat_.2_.5_ed2<- cbind(prob0_ed2, prob1_ed2, prob_test0_cor.2_ed2, prob_test1_cor.2_ed2)
p_.2_.5_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.2_.5_ed2, cor = .2, figure = "ranksProb")
dat_.5_.5_ed2<- cbind(prob0_ed2, prob1_ed2, prob_test0_cor.5_ed2, prob_test1_cor.5_ed2)
p_.5_.5_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.5_.5_ed2, cor = .5, figure = "ranksProb")
dat_.8_.5_ed2<- cbind(prob0_ed2, prob1_ed2, prob_test0_cor.8_ed2, prob_test1_cor.8_ed2)
p_.8_.5_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.8_.5_ed2, cor = .8, figure = "ranksProb")
p_rel1 = plot_grid(p_.2_.5_ed2, p_.5_.5_ed2, p_.8_.5_ed2, ncol = 3, labels = letters[1:3], align = 'hv')
title <- ggdraw() + draw_label("et = 2, m0 = 50, m1 = 50")
plot_grid(title, p_rel1, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
plot_grid(title, p_rel1, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
# for 90% and ed = 2 ---------
dat_.2_.9_ed2<- cbind(prob02_ed2, prob12_ed2, prob_test0_cor.22_ed2, prob_test1_cor.22_ed2)
p_.2_.9_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.2_.9_ed2, cor = .2, figure = "ranksProb")
dat_.5_.9_ed2<- cbind(prob02_ed2, prob12_ed2, prob_test0_cor.52_ed2, prob_test1_cor.52_ed2)
p_.5_.9_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.5_.9_ed2, cor = .5, figure = "ranksProb")
dat_.8_.9_ed2<- cbind(prob02_ed2, prob12_ed2, prob_test0_cor.82_ed2, prob_test1_cor.82_ed2)
p_.8_.9_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.8_.9_ed2, cor = .8, figure = "ranksProb")
p_rel1 = plot_grid(p_.2_.9_ed2, p_.5_.9_ed2, p_.8_.9_ed2, ncol = 3, labels = letters[1:3], align = 'hv')
title <- ggdraw() + draw_label("et = 2, m0 = 90, m1 = 90")
plot_grid(title, p_rel1, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
# for 50% and ed = 0-----------------
dat_.2_.5_ed0<- cbind(prob0_ed0, prob1_ed0, prob_test0_cor.2_ed0, prob_test1_cor.2_ed0)
p_.2_.5_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.2_.5_ed0, cor = .2, figure = "ranksProb")
dat_.5_.5_ed0<- cbind(prob0_ed0, prob1_ed0, prob_test0_cor.5_ed0, prob_test1_cor.5_ed0)
p_.5_.5_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.5_.5_ed0, cor = .5, figure = "ranksProb")
dat_.8_.5_ed0<- cbind(prob0_ed0, prob1_ed0, prob_test0_cor.8_ed0, prob_test1_cor.8_ed0)
p_.8_.5_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.8_.5_ed0, cor = .8, figure = "ranksProb")
p_rel3 = plot_grid(p_.2_.5_ed0, p_.5_.5_ed0, p_.8_.5_ed0, ncol = 3, labels = letters[1:3], align = 'hv')
title <- ggdraw() + draw_label("et = 0, m0 = 50, m1 = 50")
plot_grid(title, p_rel3, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
plot_grid(title, p_rel3, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
# for 90% and ed = 0 ---------
dat_.2_.9_ed0<- cbind(prob02_ed0, prob12_ed0, prob_test0_cor.22_ed0, prob_test1_cor.22_ed0)
p_.2_.9_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.2_.9_ed0, cor = .2, figure = "ranksProb")
dat_.5_.9_ed0<- cbind(prob02_ed0, prob12_ed0, prob_test0_cor.52_ed0, prob_test1_cor.52_ed0)
p_.5_.9_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.5_.9_ed0, cor = .5, figure = "ranksProb")
dat_.8_.9_ed0<- cbind(prob02_ed0, prob12_ed0, prob_test0_cor.82_ed0, prob_test1_cor.82_ed0)
p_.8_.9_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.8_.9_ed0, cor = .8, figure = "ranksProb")
p_rel3 = plot_grid(p_.2_.9_ed0, p_.5_.9_ed0, p_.8_.9_ed0, ncol = 3, labels = letters[1:3], align = 'hv')
title <- ggdraw() + draw_label("et = 0, m0 = 90, m1 = 10")
plot_grid(title, p_rel3, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
p_rel4 = plot_grid(p_.2_.9_ed0, p_.5_.9_ed0, p_.8_.9_ed0, ncol = 3, labels = letters[1:3], align = 'hv')
title <- ggdraw() + draw_label("et = 0, m0 = 90, m1 = 10")
plot_grid(title, p_rel4, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
plot_grid(title, p_rel4, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
probRel_filterVstest_effect <- function(r, rho, H0, ed, m0, m1)
{
mean_ey = rho*ed
sd_ey = sqrt(1 - rho*rho)
ey_val = rnorm(100, mean_ey, sd_ey)
prob_condition_ey <- function(ey)
{
et <- ifelse(H0 == 0, 0, ey)
probs_per_ey = prob_rank_givenEffect(k = r, et = et, ey = ey,
m0 = m0, m1 = m1)
return(probs_per_ey)
}
prob_per_r = mean(sapply(ey_val,  prob_condition_ey))
return(prob_per_r)
}
m = 100
m0 = 90
m1 = 50
ed=0
prob_test0_cor.2 <- sapply(1:100, prob_relation_filterTestEffect, rho=.2, H0=0,
ed=ed, m0=m0, m1=m1)
prob_test1_cor.2 <- sapply(1:100, prob_relation_filterTestEffect, rho=.2, H0=1,
ed=ed, m0=m0, m1=m1)
prob0 <- sapply(1:100, prob_rank_givenEffect, et=0, ey=ed, nrep = 10000, m0=m0, m1=m1)
prob1 <- sapply(1:100, prob_rank_givenEffect, et=ed, ey=ed, nrep = 10000, m0=m0, m1=m1)
prob_test0_cor.2 <- sapply(1:100, probRel_filterVstest_effect, rho=.2, H0=0,
ed=ed, m0=m0, m1=m1)
prob_test1_cor.2 <- sapply(1:100, probRel_filterVstest_effect, rho=.2, H0=1,
ed=ed, m0=m0, m1=m1)
matplot(1:100, cbind(prob_test0_cor.2, prob_test1_cor.2, prob0, prob1))
rm(list=ls())
load("U:/Documents/My Research (UGA)/Multiple Hypoetheses/Article-1/smu_relation_filterTest.RDATA")
# for 50% and ed = 2-----------------
dat_.2_.5_ed2<- cbind(prob0_ed2, prob1_ed2, prob_test0_cor.2_ed2, prob_test1_cor.2_ed2)
p_.2_.5_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.2_.5_ed2, cor = .2, figure = "ranksProb")
dat_.5_.5_ed2<- cbind(prob0_ed2, prob1_ed2, prob_test0_cor.5_ed2, prob_test1_cor.5_ed2)
p_.5_.5_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.5_.5_ed2, cor = .5, figure = "ranksProb")
dat_.8_.5_ed2<- cbind(prob0_ed2, prob1_ed2, prob_test0_cor.8_ed2, prob_test1_cor.8_ed2)
p_.8_.5_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.8_.5_ed2, cor = .8, figure = "ranksProb")
p_rel1 = plot_grid(p_.2_.5_ed2, p_.5_.5_ed2, p_.8_.5_ed2, ncol = 3, labels = letters[1:3], align = 'hv')
title <- ggdraw() + draw_label("et = 2, m0 = 50, m1 = 50")
plot_grid(title, p_rel1, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
ranks = 1:100
# extract the legend from one of the plots--------------------------------------
datRelaion1 <- data.frame(ranks, prob0_ed2, prob1_ed2, prob_test0_cor.2_ed2, prob_test1_cor.2_ed2)
colnames(datRelaion1) <- c("ranks", "FH0","FH1","TH0","TH1")
datRelaion1_melt1 <- melt(datRelaion1, id.var="ranks")
p_.2 <- ggplot(datRelaion1_melt1, aes(x = ranks, y = value, group = variable, colour = variable)) +
geom_line(aes(linetype = variable), size = 1.5) +
labs(x = "ranks", y = "p(rank | effect)", title = "cor = .5") +
theme(legend.title = element_blank(), legend.position="bottom")
legend_rel <- get_legend(p_.2 + theme(legend.direction="horizontal", legend.position="bottom"))
#
# for 50% and ed = 2-----------------
dat_.2_.5_ed2<- cbind(prob0_ed2, prob1_ed2, prob_test0_cor.2_ed2, prob_test1_cor.2_ed2)
p_.2_.5_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.2_.5_ed2, cor = .2, figure = "ranksProb")
dat_.5_.5_ed2<- cbind(prob0_ed2, prob1_ed2, prob_test0_cor.5_ed2, prob_test1_cor.5_ed2)
p_.5_.5_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.5_.5_ed2, cor = .5, figure = "ranksProb")
dat_.8_.5_ed2<- cbind(prob0_ed2, prob1_ed2, prob_test0_cor.8_ed2, prob_test1_cor.8_ed2)
p_.8_.5_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.8_.5_ed2, cor = .8, figure = "ranksProb")
p_rel1 = plot_grid(p_.2_.5_ed2, p_.5_.5_ed2, p_.8_.5_ed2, ncol = 3, labels = letters[1:3], align = 'hv')
title <- ggdraw() + draw_label("et = 2, m0 = 50, m1 = 50")
plot_grid(title, p_rel1, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
# for 90% and ed = 2 ---------
dat_.2_.9_ed2<- cbind(prob02_ed2, prob12_ed2, prob_test0_cor.22_ed2, prob_test1_cor.22_ed2)
p_.2_.9_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.2_.9_ed2, cor = .2, figure = "ranksProb")
dat_.5_.9_ed2<- cbind(prob02_ed2, prob12_ed2, prob_test0_cor.52_ed2, prob_test1_cor.52_ed2)
p_.5_.9_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.5_.9_ed2, cor = .5, figure = "ranksProb")
dat_.8_.9_ed2<- cbind(prob02_ed2, prob12_ed2, prob_test0_cor.82_ed2, prob_test1_cor.82_ed2)
p_.8_.9_ed2 <-  nice_plots(x_vec = ranks, y_matrix = dat_.8_.9_ed2, cor = .8, figure = "ranksProb")
p_rel1 = plot_grid(p_.2_.9_ed2, p_.5_.9_ed2, p_.8_.9_ed2, ncol = 3, labels = letters[1:3], align = 'hv')
title <- ggdraw() + draw_label("et = 2, m0 = 90, m1 = 10")
plot_grid(title, p_rel1, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
# for 50% and ed = 0-----------------
dat_.2_.5_ed0<- cbind(prob0_ed0, prob1_ed0, prob_test0_cor.2_ed0, prob_test1_cor.2_ed0)
p_.2_.5_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.2_.5_ed0, cor = .2, figure = "ranksProb")
dat_.5_.5_ed0<- cbind(prob0_ed0, prob1_ed0, prob_test0_cor.5_ed0, prob_test1_cor.5_ed0)
p_.5_.5_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.5_.5_ed0, cor = .5, figure = "ranksProb")
dat_.8_.5_ed0<- cbind(prob0_ed0, prob1_ed0, prob_test0_cor.8_ed0, prob_test1_cor.8_ed0)
p_.8_.5_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.8_.5_ed0, cor = .8, figure = "ranksProb")
p_rel3 = plot_grid(p_.2_.5_ed0, p_.5_.5_ed0, p_.8_.5_ed0, ncol = 3, labels = letters[1:3], align = 'hv')
title <- ggdraw() + draw_label("et = 0, m0 = 50, m1 = 50")
plot_grid(title, p_rel3, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
# for 90% and ed = 0 ---------
dat_.2_.9_ed0<- cbind(prob02_ed0, prob12_ed0, prob_test0_cor.22_ed0, prob_test1_cor.22_ed0)
p_.2_.9_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.2_.9_ed0, cor = .2, figure = "ranksProb")
dat_.5_.9_ed0<- cbind(prob02_ed0, prob12_ed0, prob_test0_cor.52_ed0, prob_test1_cor.52_ed0)
p_.5_.9_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.5_.9_ed0, cor = .5, figure = "ranksProb")
dat_.8_.9_ed0<- cbind(prob02_ed0, prob12_ed0, prob_test0_cor.82_ed0, prob_test1_cor.82_ed0)
p_.8_.9_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.8_.9_ed0, cor = .8, figure = "ranksProb")
p_rel4 = plot_grid(p_.2_.9_ed0, p_.5_.9_ed0, p_.8_.9_ed0, ncol = 3, labels = letters[1:3], align = 'hv')
title <- ggdraw() + draw_label("et = 0, m0 = 90, m1 = 10")
plot_grid(title, p_rel4, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
dev.off()
plot_grid(title, p_rel1, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
p_rel1 = plot_grid(p_.2_.5_ed2, p_.5_.5_ed2, p_.8_.5_ed2, ncol = 3, labels = letters[1:3], align = 'hv')
title1 <- ggdraw() + draw_label("et = 2, m0 = 50, m1 = 50")
plot_grid(title1, p_rel1, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
# for 50% and ed = 0-----------------
dat_.2_.5_ed0<- cbind(prob0_ed0, prob1_ed0, prob_test0_cor.2_ed0, prob_test1_cor.2_ed0)
p_.2_.5_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.2_.5_ed0, cor = .2, figure = "ranksProb")
dat_.5_.5_ed0<- cbind(prob0_ed0, prob1_ed0, prob_test0_cor.5_ed0, prob_test1_cor.5_ed0)
p_.5_.5_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.5_.5_ed0, cor = .5, figure = "ranksProb")
dat_.8_.5_ed0<- cbind(prob0_ed0, prob1_ed0, prob_test0_cor.8_ed0, prob_test1_cor.8_ed0)
p_.8_.5_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.8_.5_ed0, cor = .8, figure = "ranksProb")
p_rel3 = plot_grid(p_.2_.5_ed0, p_.5_.5_ed0, p_.8_.5_ed0, ncol = 3, labels = letters[1:3], align = 'hv')
title3 <- ggdraw() + draw_label("et = 0, m0 = 50, m1 = 50")
plot_grid(title3, p_rel3, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
plot_grid(title3, p_rel3, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
# for 90% and ed = 0 ---------
dat_.2_.9_ed0<- cbind(prob02_ed0, prob12_ed0, prob_test0_cor.22_ed0, prob_test1_cor.22_ed0)
p_.2_.9_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.2_.9_ed0, cor = .2, figure = "ranksProb")
dat_.5_.9_ed0<- cbind(prob02_ed0, prob12_ed0, prob_test0_cor.52_ed0, prob_test1_cor.52_ed0)
p_.5_.9_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.5_.9_ed0, cor = .5, figure = "ranksProb")
dat_.8_.9_ed0<- cbind(prob02_ed0, prob12_ed0, prob_test0_cor.82_ed0, prob_test1_cor.82_ed0)
p_.8_.9_ed0 <-  nice_plots(x_vec = ranks, y_matrix = dat_.8_.9_ed0, cor = .8, figure = "ranksProb")
p_rel4 = plot_grid(p_.2_.9_ed0, p_.5_.9_ed0, p_.8_.9_ed0, ncol = 3, labels = letters[1:3], align = 'hv')
title4 <- ggdraw() + draw_label("et = 0, m0 = 90, m1 = 10")
plot_grid(title4, p_rel4, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
plot_grid(title4, p_rel4, legend_rel, ncol = 1, rel_heights=c(.1, 1, .1))
m = 100
m0 = 90
m1 = 10
ed=0
prob_test0_cor.2 <- sapply(1:100, probRel_filterVstest_effect, rho=.2, H0=0,
ed=ed, m0=m0, m1=m1)
probRel_filterVstest_effect <- function(r, rho, H0, ed, m0, m1)
{
mean_ey = rho*ed
sd_ey = sqrt(1 - rho*rho)
ey_val = rnorm(100, mean_ey, sd_ey)
prob_condition_ey <- function(ey)
{
et <- ifelse(H0 == 0, 0, ey)
probs_per_ey = prob_rank_givenEffect(k = r, et = et, ey = ey,
m0 = m0, m1 = m1)
return(probs_per_ey)
}
prob_per_r = mean(sapply(ey_val,  prob_condition_ey))
return(prob_per_r)
}
m = 100
m0 = 90
m1 = 10
ed=0
prob_test0_cor.2 <- sapply(1:100, probRel_filterVstest_effect, rho=.2, H0=0,
ed=ed, m0=m0, m1=m1)
prob_test1_cor.2 <- sapply(1:100, probRel_filterVstest_effect, rho=.2, H0=1,
ed=ed, m0=m0, m1=m1)
matplot(1:100, cbind(prob_test0_cor.2, prob_test1_cor.2, prob0, prob1))
prob0 <- sapply(1:100, prob_rank_givenEffect, et=0, ey=ed, nrep = 10000, m0=m0, m1=m1)
prob1 <- sapply(1:100, prob_rank_givenEffect, et=ed, ey=ed, nrep = 10000, m0=m0, m1=m1)
matplot(1:100, cbind(prob_test0_cor.2, prob_test1_cor.2, prob0, prob1))
bottomly_count_table <- read.table("bottomly_count_table.txt",h=T)
bottomly_phenodata <- read.table("bottomly_phenodata.txt",h=T)
countData <- as.matrix(bottomly_count_table[,-1])		# counts
condition <- factor(bottomly_phenodata[,3])				# strain as factor
dds <- DESeqDataSetFromMatrix(countData, DataFrame(condition), ~ condition)
library(DESeq2)
dds <- DESeqDataSetFromMatrix(countData, DataFrame(condition), ~ condition)
dds <- DESeq(dds)
bottomly <- as.data.frame(results(dds))
colnames(bottomly)
test = bottomly$stat
pval = bottomly$pvalue
filter = bottomly$baseMean
Data <- tibble(test, pval, filter)	# data of filter covariate and pvlaues
bc <- boxcox(filter ~ test)
trans <- bc$x[which.max(bc$y)]
model_bot <- lm(filter^trans ~ test)
summary(filter^trans)
sd(filter^trans)
opw
load("U:/Documents/My Research (UGA)/Multiple Hypoetheses/Article-1/bottomly_data_example.RDATA")
load("U:/Documents/My Research (UGA)/Multiple Hypoetheses/Article-1/proteomics_data_example.RDATA")
p_fdr_bot <- ggplot(rej_mat_bot_FDR2, aes(x = alpha, y = value, group = variable,
colour = variable)) +
geom_line(aes(linetype = variable), size = 1.5) +
labs(x = expression(bold(paste("Nominal ",alpha))), y = "Discoveries", title = "Bottomly") +
theme(legend.title = element_blank(), legend.position="bottom")
p_fdr_prot <- ggplot(rej_mat_prot_FDR2, aes(x = alpha, y = value, group = variable,
colour = variable)) +
geom_line(aes(linetype = variable), size = 1.5) +
labs(x = expression(bold(paste("Nominal ",alpha))), y = "Discoveries", title = "Proteomics") +
theme(legend.position="none")
# extract the legend from one of the plots
legend_example <- get_legend(p_fdr_bot + theme(legend.direction="horizontal",
legend.position="bottom"))
p_fdr_bot = p_fdr_bot + theme(legend.position="none")
p_fdr_prot = p_fdr_prot + theme(legend.position="none")
# arrange the plots
p = plot_grid(p_fdr_bot, p_fdr_prot, nrow=1, labels = "auto", align='hv')
plot_grid(p, legend_example, ncol = 1, rel_heights = c(1,.1))
plot_grid(p, legend_example, ncol = 1, rel_heights = c(1,.1))
load("U:/Documents/My Research (UGA)/Multiple Hypoetheses/Article-1/simu_probRel_filterVstest_effect.RDATA")
datRelaion1 <- data.frame(ranks, prob0_ed2, prob1_ed2, prob_test0_cor.2_ed2, prob_test1_cor.2_ed2)
datRelaion1
library(OPWpaper)
setwd("U:/Documents/My Research (UGA)/Multiple Hypoetheses/Article-1")
proteomics_file <- system.file("extdata/real_data","science_signaling.csv", package = "IHWpaper")
proteomics_df <- read.csv(proteomics_file, stringsAsFactors = F)
proteomics_df$pvalue <- rank(proteomics_df$p1, ties.method="first")*proteomics_df$p1/nrow(proteomics_df)
proteomics_df$test = qnorm(proteomics_df$pvalue, lower.tail = F)
names(proteomics_df)
test = proteomics_df$test
test[test == -Inf] <- NA
test[test == Inf] <- NA
pval = proteomics_df$pvalue
filter = proteomics_df$X..peptides
bc2 <- boxcox(filter ~ test)
trans2 <- bc2$x[which.max(bc2$y)]
model_prot <- lm(filter^trans2 ~ test)
summary(filter^trans2)
sd(filter^trans2)
tools::showNonASCII(readLines("ranks_probability.Rmd"))
getwd()
set("C:/Users/Apu-Jerrica/Google Drive/My R Packages/OPWpaper/vignettes")
setwd("C:/Users/Apu-Jerrica/Google Drive/My R Packages/OPWpaper/vignettes")
tools::showNonASCII(readLines("ranks_probability.Rmd"))
tools::showNonASCII(readLines("ranks_probability.Rmd"))
